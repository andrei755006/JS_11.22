/*
Написать функцию, которая принимает три аргумента: массив чисел, первое значение интервала, второе значение интервала. 

Результатом вызова функции должен быть массив из значений переданного массива (в качестве первого параметра), которые входят в этот интервал (включая границы).

Если в качестве первого параметра передан не массив [isArray] или массив , содержащий не только числа - кидать ошибку (throw new Error()).

Если хотя бы одно из значений массива невалидное число, то также кидать ошибку. 

Если первое значение интервала меньше второго, то считать за интервал значения от первого до второго, иначе - от второго до первого.

Функция должна называться selectFromInterval. Это важно, т.к. проверять буду тестами.

Примеры:
Вызываем функцию: selectFromInterval([1,3,5], 5, 2)
Получаем результат: [3,5]
Вызываем функцию: selectFromInterval([-2, -15, 0, 4], -13, -5)
Получаем результат: []
Вызываем функцию: selectFromInterval(['aaa'], 2, 3)
Получаем результат: Ошибка!
*/

function selectFromInterval(arr, value_1, value_2) {
  let min = value_1
  let max = value_2
  let result_arr = []

  if(!Array.isArray(arr) || arr.every(n => typeof n === 'number') === false || arr.includes(NaN) === true){
    throw new Error()
  } else if (arr.every(n => n > 0) === false){
    return []
  }

  if (max < min){
    min = min ^ max 
    max = min ^ max 
    min = min ^ max
  }

  result_arr = arr.filter(n => n >= min && n <= max)

  return result_arr
}